-- Databricks notebook source
-- MAGIC %md
-- MAGIC ### Example Exploratory Notebook
-- MAGIC
-- MAGIC Use this notebook to explore the data generated by the pipeline in your preferred programming language.
-- MAGIC
-- MAGIC **Note**: This notebook is not executed as part of the pipeline.

-- COMMAND ----------

WITH DESCLookup AS (
SELECT 
PMPD.ProductModelID,
PMPD.Culture,
PD.Description
FROM 
adventureworks.adventureworks.productmodelproductdescription PMPD
LEFT OUTER JOIN adventureworks.adventureworks.productdescription PD ON PMPD.ProductDescriptionID = PD.ProductDescriptionID
)
,
Source AS (
SELECT 
       P.ProductID
      ,P.ProductNumber AS ProductAlternateKey
      ,P.ProductCategoryID AS ProductSubcategoryKey
      ,'' AS WeightUnitMeasureCode
      ,'' AS SizeUnitMeasureCode
      ,P.Name AS EnglishProductName
      ,P.StandardCost AS StandardCost
      ,1 AS FinishedGoodsFlag
      ,P.Color AS Color
      ,'' AS SafetyStockLevel
      ,'' AS ReorderPoint
      ,P.ListPrice AS ListPrice
      ,P.Size AS Size
      ,'' AS SizeRange
      ,P.Weight AS Weight
      ,'' AS DaysToManufacture
      ,'' AS ProductLine
      ,'' AS DealerPrice
      ,'' AS Class
      ,'' AS Style
      ,PM.ProductModelID
      ,PM.Name AS ModelName
      ,PC.ProductCategoryID
      ,PC.Name AS ProductCategory
      ,PDEN.Description AS EnglishDescription
      ,PDFR.Description AS FrenchDescription
      ,PDCH.Description AS ChineseDescription
      ,PDAR.Description AS ArabicDescription
      ,PDHE.Description AS HebrewDescription
      ,PDTH.Description AS ThaiDescription
      ,'' AS GermanDescription
      ,'' AS JapaneseDescription
      ,'' AS TurkishDescription
      ,P.SellStartDate AS StartDate
      ,P.SellEndDate AS EndDate
      ,CASE WHEN P.SellEndDate IS NULL THEN 'Current' ELSE '' END AS Status
FROM 
adventureworks.adventureworks.product P
LEFT OUTER JOIN adventureworks.adventureworks.productcategory PC ON P.ProductCategoryID = PC.ProductCategoryID
LEFT OUTER JOIN adventureworks.adventureworks.productmodel PM ON P.ProductModelID = PM.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'en') PDEN ON P.ProductModelID = PDEN.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'ar') PDAR ON P.ProductModelID = PDAR.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'fr') PDFR ON P.ProductModelID = PDFR.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'he') PDHE ON P.ProductModelID = PDHE.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'zh-cht') PDCH ON P.ProductModelID = PDCH.ProductModelID
LEFT OUTER JOIN (SELECT ProductModelID, Description FROM DESCLookup WHERE TRIM(Culture) = 'th') PDTH ON P.ProductModelID = PDTH.ProductModelID
)

SELECT *
FROM Source

-- COMMAND ----------

SELECT * FROM adventureworks.adventureworksdw.dim_product

-- COMMAND ----------

SELECT 
  DP.ProductKey, 
  SOH.*, 
  SOD.ProductID, SOD.SalesOrderDetailID, SOD.OrderQty, SOD.UnitPrice, SOD.UnitPriceDiscount, SOD.LineTotal 
FROM
adventureworks.adventureworks_bronze.salesorderheader SOH
INNER JOIN adventureworks.adventureworks_bronze.salesorderdetail SOD ON SOH.SalesOrderID = SOD.SalesOrderID
LEFT OUTER JOIN adventureworks.adventureworksdw.dim_product DP ON SOD.ProductID = DP.ProductID

-- COMMAND ----------

SELECT DISTINCT OrderDate
FROM
adventureworks.adventureworks_bronze.salesorderheader
UNION
SELECT DISTINCT ShipDate
FROM
adventureworks.adventureworks_bronze.salesorderheader
UNION
SELECT DISTINCT DueDate
FROM
adventureworks.adventureworks_bronze.salesorderheader

-- COMMAND ----------

SELECT * FROM adventureworks.adventureworksdw.fact_internetsales

-- COMMAND ----------

SELECT CA.AddressType, CA.CustomerID, CA.AddressID,
C.* EXCEPT(C.CustomerID, C.rowguid, C.ModifiedDate),
A.* EXCEPT(A.AddressID, A.rowguid, A.ModifiedDate)
FROM
adventureworks.adventureworks.customeraddress CA
LEFT OUTER JOIN adventureworks.adventureworks.customer C ON CA.CustomerID = C.CustomerID
LEFT OUTER JOIN adventureworks.adventureworks.address A ON CA.AddressID = A.AddressID

-- COMMAND ----------

SELECT date_format(current_date(), 'yyyyMMdd')

-- COMMAND ----------

ALTER TABLE adventureworks.adventureworksdw.dim_customer
ADD CONSTRAINT PK_dim_customer PRIMARY KEY (CustomerKey);

-- COMMAND ----------

SELECT date_diff(DAY, DATE('2008-06-01'), DATE('2008-12-31'))

-- COMMAND ----------

-- MAGIC %md
-- MAGIC ### RESET

-- COMMAND ----------

 CREATE TABLE adventureworks.adventureworks.salesorderheader_back
 AS
SELECT * FROM adventureworks.adventureworks.salesorderheader WHERE SalesOrderID BETWEEN 71774 AND 71946;

-- COMMAND ----------

 CREATE TABLE adventureworks.adventureworks.salesorderdetail_back
 AS
 SELECT * FROM adventureworks.adventureworks.salesorderdetail WHERE SalesOrderID BETWEEN 71774 AND 71946;

-- COMMAND ----------

TRUNCATE TABLE adventureworks.adventureworks.salesorderheader;
TRUNCATE TABLE adventureworks.adventureworks.salesorderdetail;

-- COMMAND ----------

INSERT INTO adventureworks.adventureworks.salesorderheader
SELECT * FROM adventureworks.adventureworks.salesorderheader_back;

-- COMMAND ----------

INSERT INTO adventureworks.adventureworks.salesorderdetail
SELECT * FROM adventureworks.adventureworks.salesorderdetail_back;

-- COMMAND ----------

BEGIN
    DECLARE CNT INT DEFAULT 200;
    DECLARE NUM INT DEFAULT 1;
    
    WHILE NUM <= 6275 DO

        INSERT INTO adventureworks.adventureworks.salesorderheader
        SELECT SalesOrderID * CNT AS SalesOrderID, 
          RevisionNumber,
          dateadd(OrderDate::date, NUM) AS OrderDate,
          dateadd(DueDate::date, NUM) AS DueDate,
          dateadd(ShipDate::date, NUM) AS ShipDate,
          Status, OnlineOrderFlag, SalesOrderNumber, PurchaseOrderNumber, AccountNumber, CustomerID,ShipToAddressID, BillToAddressID, ShipMethod, CreditCardApprovalCode, SubTotal, TaxAmt, Freight, TotalDue, Comment, rowguid, ModifiedDate
        FROM adventureworks.adventureworks.salesorderheader
        WHERE SalesOrderID BETWEEN 71774 AND 71946;
        
        SET CNT = CNT + 1;
        SET NUM = NUM + 1;
        --SELECT CNT AS current_count;
    END WHILE;
END

-- COMMAND ----------

BEGIN
    DECLARE CNT INT DEFAULT 200;
    DECLARE NUM INT DEFAULT 1;
    
    WHILE NUM <= 6275 DO

        INSERT INTO adventureworks.adventureworks.salesorderdetail
        SELECT SalesOrderID * CNT AS SalesOrderID, 
        SalesOrderDetailID, OrderQty, ProductID, UnitPrice, UnitPriceDiscount, LineTotal, rowguid, ModifiedDate
        FROM adventureworks.adventureworks.salesorderdetail
        WHERE SalesOrderID BETWEEN 71774 AND 71946;
        
        SET CNT = CNT + 1;
        SET NUM = NUM + 1;
        --SELECT CNT AS current_count;
    END WHILE;
END

-- COMMAND ----------

SELECT MAX(SalesOrderID) FROM adventureworks.adventureworks.salesorderdetail ORDER BY 1

-- COMMAND ----------

SELECT MAX(SalesOrderID) FROM adventureworks.adventureworks.salesorderheader ORDER BY 1
--56,549,556 ->786
--56,549,556 ->786

-- COMMAND ----------

SELECT MIN(OrderDate),MAX(OrderDate), date_diff(day,MIN(OrderDate),MAX(OrderDate)) FROM adventureworks.adventureworks.salesorderheader--318,696

-- COMMAND ----------

SELECT COUNT(1) FROM adventureworks.adventureworks.salesorderdetail--318,696

-- COMMAND ----------

SELECT MAX(Order_DateKey), COUNT(1) FROM adventureworks.adventureworksdw.fact_internetsales

-- COMMAND ----------

DESCRIBE EXTENDED adventureworks.adventureworksdw.fact_internetsales
